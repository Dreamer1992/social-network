{"version":3,"sources":["components/common/Preloader/Preloader.module.css","assets/images/preloader.gif","components/Profile/Profile.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","serviceWorker.js","api/api.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/sidebarReducer.js","redux/usersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Sidebar/Sidebar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","components/common/Pagination/Pagination.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.jsx","components/Users/UsersContainer.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/AddNewPostForm/AddNewPostForm.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","App.js","index.js","assets/images/default_avatar.png","components/common/FormsControls/FormsControls.module.css","components/Sidebar/Sidebar.module.css","components/Users/Users.module.css","components/Profile/Posts/Posts.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/common/Pagination/Pagination.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","userId","delete","follow","post","getUserProfile","console","warn","profileAPI","getUserStatus","updateUserStatus","status","put","savePhoto","photoFile","formData","FormData","append","authAPI","email","password","rememberMe","initialState","posts","id","message","like","newPostText","profile","setUserStatus","type","profileReducer","state","action","newPost","filter","p","postId","photos","dialogs","name","messages","dialogsReducer","text","newMessageText","sidebarReducer","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","map","u","followed","count","login","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","app","auth","form","formReducer","store","createStore","applyMiddleware","ThunkMiddleware","Sidebar","className","styles","to","activeClassName","activeLink","DialogItem","props","dialogItem","Message","FormControl","input","meta","hasError","touched","error","formControl","children","textError","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","reduxForm","onSubmit","handleSubmit","Field","component","rows","placeholder","validate","Dialogs","dialogsElements","dialog","key","messagesElements","dialogItems","values","sendMessageCreator","mapStateToPropsForRedirect","compose","connect","Component","RedirectComponent","this","React","Pagination","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","onClick","page","selectedPage","e","Users","user","userItem","userPhotoWrapper","userPhoto","src","small","alt","disabled","some","userItemInfo","Preloader","preloaderWrapper","preloader","UsersComponent","pageNumber","setCurrentPage","bind","items","totalCount","Post","myPhoto","maxLength10","row","btn","Posts","memo","postsElements","postTextarea","addPost","PostsContainer","addPostActionCreator","ProfileStatusWithHook","editMode","setEditMode","setStatus","useEffect","autoFocus","onBlur","onChange","currentTarget","onDoubleClick","ProfileInfo","isOwner","profileAvatar","large","defaultAvatar","log","target","files","fullName","Profile","ProfileContainer","params","authorizedUserId","history","refreshProfile","prevProps","prevState","withRouter","file","Header","header","headerLogo","headerAuth","logout","HeaderContainer","loginError","stopSubmit","_error","App","initializeApp","path","render","DialogsContainer","UsersContainer","promise","Promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1ec68dc5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderWrapper\":\"Preloader_preloaderWrapper__3-Lwp\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.fd3051a6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1ZuET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__364Kw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileTopBg\":\"ProfileInfo_profileTopBg__3et6T\",\"profileAvatar\":\"ProfileInfo_profileAvatar__2uvdS\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'api-key': '5c0f0a90-5afa-4259-9e1c-ae6776e803f5'\r\n  }\r\n});\r\n\r\nexport const userAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n  },\r\n\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`);\r\n  },\r\n\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n\r\n  getUserProfile(userId) {\r\n    console.warn('Obsolete method. Please use profileAPI object');\r\n    return profileAPI.getUserProfile(userId);\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getUserProfile(userId) {\r\n    return instance.get(`profile/${userId}`)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n  },\r\n\r\n  getUserStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n\r\n  updateUserStatus(status) {\r\n    return instance.put(`profile/status`, {status: status});\r\n  },\r\n\r\n  savePhoto(photoFile) {\r\n    const formData = new FormData();\r\n    formData.append('image', photoFile);\r\n\r\n    return instance.put(`profile/photo`, formData);\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`)\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  },\r\n\r\n  login(email, password, rememberMe) {\r\n    return instance.post(`auth/login`, {email, password, rememberMe});\r\n  },\r\n\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  }\r\n}","import {profileAPI, userAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, message: 'Hi, how are you?', like: 10},\r\n    {id: 2, message: 'It\\'s my first post', like: 17}\r\n  ],\r\n  newPostText: 'it-kamasutra',\r\n  profile: null,\r\n  status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 6,\r\n        message: action.newPostText,\r\n        like: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        newPostText: '',\r\n        posts: [...state.posts, newPost]\r\n      }\r\n    }\r\n    case DELETE_POST:\r\n      return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n    case SET_USER_PROFILE:\r\n      return {...state, profile: action.profile}\r\n    case SET_USER_STATUS:\r\n      return {...state, status: action.status}\r\n    case SAVE_PHOTO_SUCCESS:\r\n      return {...state, profile: {...state.profile, photos: action.photos}}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => {\r\n  return (dispatch) => {\r\n    userAPI.getUserProfile(userId).then(data => {\r\n      dispatch(setUserProfile(data));\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getUserStatus(userId);\r\n\r\n  dispatch(setUserStatus(response.data));\r\n}\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateUserStatus(status);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    return dispatch(setUserStatus(status));\r\n  }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n  let response = await profileAPI.savePhoto(file);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(savePhotoSuccess(response.data.data.photos));\r\n  }\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    {id: 1, name: 'Alex'},\r\n    {id: 2, name: 'Petr'},\r\n    {id: 3, name: 'Igor'},\r\n    {id: 4, name: 'Lera'},\r\n    {id: 5, name: 'Nina'}\r\n  ],\r\n  messages: [\r\n    {id: 1, message: 'Hi'},\r\n    {id: 2, message: 'How are you?'},\r\n    {id: 3, message: 'Yo'},\r\n  ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let text = action.newMessageText;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: 4, message: text}]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText})\r\n\r\nexport default dialogsReducer;","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {userAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: true}\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: false}\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n    case SET_USERS:\r\n      return {...state, users: [...action.users]}\r\n    case SET_CURRENT_PAGE:\r\n      return {...state, currentPage: action.currentPage}\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {...state, totalUsersCount: action.count}\r\n    case TOGGLE_IS_FETCHING:\r\n      return {...state, isFetching: action.isFetching}\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId\r\n})\r\n\r\nexport const getUsers = (currentPage, pageSize) => async dispatch => {\r\n  dispatch(toggleIsFetching(true));\r\n\r\n  let response = await userAPI.getUsers(currentPage, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(response.items));\r\n  dispatch(setTotalUsersCount(response.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let response = await apiMethod(userId);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async dispatch => {\r\n  followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async dispatch => {\r\n  followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), unfollowSuccess);\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n\r\n  if (response.resultCode === 0) {\r\n    let {id, login, email} = response.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async dispatch => {\r\n  let response = await authAPI.login(email, password, rememberMe);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    let message = response.data.messages.length > 0 ? response.data.messages['0'] : 'Some error';\r\n    dispatch(stopSubmit('login', {_error: message}));\r\n  }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n  let response = await authAPI.logout();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise])\r\n    .then(() => {\r\n      dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport appReducer from \"./appReducer\";\r\nimport authReducer from './authReducer';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  app: appReducer,\r\n  auth: authReducer,\r\n  form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(ThunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport styles from './Sidebar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <nav className={styles.sidebar}>\r\n      <ul>\r\n        <li><NavLink to=\"/profile\" activeClassName={styles.activeLink}>Profile</NavLink></li>\r\n        <li><NavLink to=\"/dialogs\" activeClassName={styles.activeLink}>Messages</NavLink></li>\r\n        <li><NavLink to='/users' activeClassName={styles.activeLink}>Users</NavLink></li>\r\n        {/*<li><NavLink to='/users' activeClassName={styles.activeLink}>News</NavLink></li>*/}\r\n        {/*<li><NavLink to='/users' activeClassName={styles.activeLink}>Music</NavLink></li>*/}\r\n        {/*<li><NavLink to='/users' activeClassName={styles.activeLink}>Setting</NavLink></li>*/}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport styles from './DialogItem.modules.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={styles.dialogItem}>\r\n      <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const FormControl = ({input, meta, ...props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      {hasError && <div className={styles.textError}>{meta.error}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, ...restProps} = props;\r\n\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, ...restProps} = props;\r\n\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","export const required = value => {\r\n  if (value) return undefined;\r\n\r\n  return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n  return undefined;\r\n}","import React from 'react';\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea}\r\n             name='newMessageText'\r\n             rows='3'\r\n             placeholder='Enter your message'\r\n             validate={[required, maxLength50]}\r\n      />\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>);\r\n  let messagesElements = state.messages.map(message => <Message key={message.id} message={message.message}\r\n                                                                id={message.id}/>);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessageCreator(values.newMessageText);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogItems}>\r\n        {dialogsElements}\r\n      </div>\r\n\r\n      <div className={styles.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  let connectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return connectAuthRedirectComponent;\r\n}","import {connect} from 'react-redux';\r\nimport {sendMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from './Dialogs';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessageCreator: (newMessageText) => {\r\n      dispatch(sendMessageCreator(newMessageText))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)","import React, {useState} from 'react';\r\nimport styles from './Pagination.module.css';\r\n\r\nconst Pagination = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.pagination}>\r\n      {portionNumber > 1 &&\r\n      <button onClick={() => {\r\n        setPortionNumber(portionNumber - 1)\r\n      }}>PREV</button>}\r\n\r\n      {pages\r\n        .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n        .map(page => {\r\n          return <span className={currentPage === page && styles.selectedPage} key={page} onClick={(e) => {\r\n            onPageChanged(page);\r\n          }}>{page}</span>\r\n        })}\r\n\r\n      {portionCount > portionNumber &&\r\n      <button onClick={() => {\r\n        setPortionNumber(portionNumber + 1)\r\n      }}>NEXT</button>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userPhoto from '../../assets/images/default_avatar.png';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Pagination from '../common/Pagination/Pagination';\r\n\r\nlet Users = (props) => {\r\n  return <div>\r\n    <Pagination totalItemsCount={props.totalUsersCount}\r\n                pageSize={props.pageSize}\r\n                currentPage={props.currentPage}\r\n                onPageChanged={props.onPageChanged}\r\n    />\r\n    {\r\n      props.users.map(user => <div key={user.id} className={styles.userItem}>\r\n        <div>\r\n          <div className={styles.userPhotoWrapper}>\r\n            <NavLink to={'/profile/' + user.id}>\r\n              <img className={styles.userPhoto}\r\n                   src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                   alt={user.name}/>\r\n            </NavLink>\r\n          </div>\r\n          {user.followed\r\n            ? <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n              props.unfollow(user.id);\r\n            }}>Unfollow</button>\r\n            : <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n              props.follow(user.id);\r\n            }}>Follow</button>\r\n          }\r\n        </div>\r\n        <div className={styles.userItemInfo}>\r\n          <div>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n          </div>\r\n          <div>\r\n            <div>{'user.location.country'}</div>\r\n            <div>{'user.location.cityName'}</div>\r\n          </div>\r\n        </div>\r\n      </div>)\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\nimport preloader from '../../../assets/images/preloader.gif';\r\n\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div className={styles.preloaderWrapper}>\r\n      <img src={preloader} alt=\"Loading\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  follow,\r\n  getUsers,\r\n  setCurrentPage,\r\n  toggleFollowingProgress,\r\n  unfollow\r\n} from '../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass UsersComponent extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.setCurrentPage(pageNumber);\r\n    this.props.getUsers(pageNumber, this.props.pageSize);\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      {this.props.isFetching ? <Preloader/> : null}\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n             pageSize={this.props.pageSize}\r\n             currentPage={this.props.currentPage}\r\n             onPageChanged={this.onPageChanged}\r\n             users={this.props.users}\r\n             follow={this.props.follow}\r\n             unfollow={this.props.unfollow}\r\n             followingInProgress={this.props.followingInProgress}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching,\r\n    followingInProgress: state.usersPage.followingInProgress\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers\r\n})(UsersComponent);","import React from 'react';\r\nimport styles from './Post.module.css';\r\nimport myPhoto from '../../../../assets/images/default_avatar.png';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.post}>\r\n      <img\r\n        src={myPhoto}\r\n        alt=\"\"/>\r\n      <span>{props.message}</span>\r\n      <div>Like {props.like}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport styles from \"../Posts.module.css\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea}\r\n             name={'newPostText'}\r\n             row='2'\r\n             value={props.newPostText}\r\n             validate={[required, maxLength10]}\r\n      />\r\n      <button className={styles.btn}>Add post</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: 'addNewPost'})(AddNewPostForm);","import React from 'react';\r\nimport styles from './Posts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport AddNewPostForm from \"./AddNewPostForm/AddNewPostForm\";\r\n\r\nconst Posts = React.memo(\r\n  (props) => {\r\n\r\n    let postsElements = props.posts.map(post => <Post key={post.id} id={post.id} message={post.message}\r\n                                                      like={post.like}/>);\r\n\r\n    let onAddPost = (values) => {\r\n      props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>My posts</h3>\r\n\r\n        <div className={styles.postTextarea}>\r\n          <div>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n          </div>\r\n        </div>\r\n\r\n        {postsElements}\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default Posts;","import {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nlet PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateUserStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode\r\n        ? <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || 'Write the status'}</span>\r\n        </div>\r\n        : <div>\r\n          <input type=\"text\"\r\n                 autoFocus={true}\r\n                 onBlur={deactivateEditMode}\r\n                 onChange={onStatusChange}\r\n                 value={status}/>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport defaultAvatar from '../../../assets/images/default_avatar.png';\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus, isOwner, savePhoto}) => {\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  let onMainPhotoSelected = (e) => {\r\n    console.log(e)\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/*<div className={styles.profileTopBg}>*/}\r\n      {/*  <img src={profileTopBg} alt=''/>*/}\r\n      {/*</div>*/}\r\n      <div className={styles.profileAvatar}>\r\n        <img src={profile.photos.large ? profile.photos.large : defaultAvatar} alt=\"\"/>\r\n        {isOwner && <div><input type={'file'} onChange={onMainPhotoSelected}/></div>}\r\n        <ProfileStatusWithHook status={status} updateUserStatus={updateUserStatus}/>\r\n        <p>{profile.fullName}</p>\r\n        ava + description\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <main className={styles.profile}>\r\n      <ProfileInfo isOwner={props.isOwner}\r\n                   savePhoto={props.savePhoto}\r\n                   profile={props.profile}\r\n                   status={props.status}\r\n                   updateUserStatus={props.updateUserStatus}\r\n      />\r\n      <PostsContainer/>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, savePhoto, updateUserStatus} from '../../redux/profileReducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props}\r\n               isOwner={!this.props.match.params.userId}\r\n               profile={this.props.profile}\r\n               status={this.props.status}\r\n               updateUserStatus={this.props.updateUserStatus}\r\n               savePhoto={this.props.savePhoto}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto})\r\n)(ProfileContainer);","import React from \"react\";\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.headerLogo}>\r\n        <img src=\"https://sun9-58.userapi.com/c637526/v637526465/46948/MYX-VzYtTnU.jpg?ava=1\" alt=\"logo\"/>\r\n      </div>\r\n      <div className={styles.headerAuth}>\r\n        {props.isAuth\r\n          ? <div>{props.login} <button onClick={props.logout}>Log out</button></div>\r\n          : <NavLink to={'/login'}>Login</NavLink>\r\n        }\r\n\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Header {...this.props}/>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {required} from '../../../utils/validators/validators';\r\nimport {Input} from '../../common/FormsControls/FormsControls';\r\nimport styles from './../../common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Input}\r\n               name='email'\r\n               placeholder='Email'\r\n               validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field component={Input}\r\n               type='password'\r\n               name='password'\r\n               placeholder='Password'\r\n               validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field component={Input}\r\n               type={'checkbox'}\r\n               name='rememberMe'\r\n        /> remember me\r\n      </div>\r\n      {\r\n        props.error && <div className={styles.loginError}>\r\n          {props.error}\r\n        </div>\r\n      }\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: 'login'})(LoginForm);\r\n\r\n","import React from 'react';\r\nimport LoginForm from \"./LoginForm/LoginForm\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>LOGIN</h1>\r\n      <LoginForm onSubmit={onSubmit}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport './App.css';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.initialized) {\r\n      return <Preloader/>\r\n    }\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer/>\r\n        <Sidebar/>\r\n        <div className='app-content'>\r\n          <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n          <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n          <Route path='/users' render={() => <UsersContainer/>}/>\r\n          <Route path='/login' render={() => <Login/>}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {initializeApp})\r\n)(App);\r\n","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/reduxStore\";\r\nimport './index.css';\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport App from \"./App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/default_avatar.414267b2.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3e6x7\",\"error\":\"FormsControls_error__3A9M9\",\"textError\":\"FormsControls_textError__ri3fK\",\"loginError\":\"FormsControls_loginError__22ZeV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__14grV\",\"activeLink\":\"Sidebar_activeLink__1eUV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhotoWrapper\":\"Users_userPhotoWrapper__PaKV7\",\"userPhoto\":\"Users_userPhoto__2R5lm\",\"userItem\":\"Users_userItem__2Wgve\",\"userItemInfo\":\"Users_userItemInfo__3cMMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Posts_profile__3NpXC\",\"postTextarea\":\"Posts_postTextarea__3L_pb\",\"btn\":\"Posts_btn__14HxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3A4Ud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ga9x\",\"headerLogo\":\"Header_headerLogo__3o7L2\",\"headerAuth\":\"Header_headerAuth__VHTsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__3yhvl\",\"selectedPage\":\"Pagination_selectedPage__3o_Ew\"};"],"sourceRoot":""}