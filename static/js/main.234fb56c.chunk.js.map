{"version":3,"sources":["components/common/Preloader/Preloader.module.css","components/Profile/Profile.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormsControls/FormsControls.module.css","serviceWorker.js","api/api.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/sidebarReducer.js","redux/usersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Sidebar/Sidebar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","assets/images/default_avatar.png","components/common/Pagination/Pagination.jsx","components/Users/Users.jsx","assets/images/preloader.gif","components/common/Preloader/Preloader.jsx","components/Users/UsersContainer.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/AddNewPostForm/AddNewPostForm.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileData/Contact.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","App.js","index.js","components/Profile/ProfileInfo/ProfileData/ProfileData.module.css","components/Sidebar/Sidebar.module.css","components/Users/Users.module.css","components/Profile/Posts/Posts.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/common/Pagination/Pagination.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","userId","delete","follow","post","getUserProfile","console","warn","profileAPI","getUserStatus","updateUserStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_USER_STATUS","SAVE_PHOTO_SUCCESS","initialState","posts","id","message","like","newPostText","setUserStatus","type","dispatch","profileReducer","state","action","newPost","filter","p","postId","photos","SEND_MESSAGE","dialogs","name","messages","dialogsReducer","text","newMessageText","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","map","u","followed","count","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","login","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","getCaptchaUrl","url","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","app","auth","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ThunkMiddleware","__store__","Sidebar","className","styles","to","activeClassName","activeLink","DialogItem","props","dialogItem","Message","FormControl","input","meta","hasError","touched","error","formControl","children","textError","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","reduxForm","onSubmit","handleSubmit","Field","component","rows","placeholder","validate","Dialogs","dialogsElements","dialog","messagesElements","dialogItems","values","sendMessageCreator","mapStateToPropsForRedirect","connect","Component","RedirectComponent","this","React","Pagination","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","onClick","page","selectedPage","e","Users","user","userItem","userPhotoWrapper","userPhoto","src","small","alt","disabled","some","userItemInfo","Preloader","preloaderWrapper","preloader","UsersComponent","pageNumber","setCurrentPage","bind","items","totalCount","Post","myPhoto","maxLength10","row","btn","Posts","memo","postsElements","postTextarea","addPost","PostsContainer","addPostActionCreator","ProfileStatusWithHook","editMode","setEditMode","setStatus","useEffect","autoFocus","onBlur","onChange","currentTarget","onDoubleClick","Contact","contactTitle","contactValue","contactItem","href","target","rel","ProfileData","isOwner","goToEditMode","fullName","aboutMe","lookingForAJobDescription","Object","keys","contacts","key","profileDataForm","formGroup","ProfileInfo","profileAvatar","large","defaultAvatar","files","initialValues","Profile","ProfileContainer","params","authorizedUserId","history","refreshProfile","prevProps","prevState","withRouter","file","getState","stopSubmit","_error","Promise","reject","Header","header","headerLogo","headerAuth","logout","HeaderContainer","loginError","App","initializeApp","exact","from","path","render","DialogsContainer","UsersContainer","promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.234fb56c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderWrapper\":\"Preloader_preloaderWrapper__3-Lwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1ZuET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__364Kw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileTopBg\":\"ProfileInfo_profileTopBg__3et6T\",\"profileAvatar\":\"ProfileInfo_profileAvatar__2uvdS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3e6x7\",\"error\":\"FormsControls_error__3A9M9\",\"textError\":\"FormsControls_textError__ri3fK\",\"loginError\":\"FormsControls_loginError__22ZeV\",\"formGroup\":\"FormsControls_formGroup__2h7le\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'api-key': '5c0f0a90-5afa-4259-9e1c-ae6776e803f5'\r\n  }\r\n});\r\n\r\nexport const userAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n  },\r\n\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`);\r\n  },\r\n\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n\r\n  getUserProfile(userId) {\r\n    console.warn('Obsolete method. Please use profileAPI object');\r\n    return profileAPI.getUserProfile(userId);\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getUserProfile(userId) {\r\n    return instance.get(`profile/${userId}`)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n  },\r\n\r\n  getUserStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n\r\n  updateUserStatus(status) {\r\n    return instance.put(`profile/status`, {status: status});\r\n  },\r\n\r\n  savePhoto(photoFile) {\r\n    const formData = new FormData();\r\n    formData.append('image', photoFile);\r\n\r\n    return instance.put(`profile/photo`, formData);\r\n  },\r\n\r\n  saveProfile(profile) {\r\n    return instance.put(`/profile`, profile);\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`)\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  },\r\n\r\n  login(email, password, rememberMe = false, captcha = null) {\r\n    return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n  },\r\n\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  }\r\n}\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl() {\r\n    return instance.get(`security/get-captcha-url`);\r\n  }\r\n}","import {profileAPI, userAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, message: 'Hi, how are you?', like: 10},\r\n    {id: 2, message: 'It\\'s my first post', like: 17}\r\n  ],\r\n  newPostText: 'it-kamasutra',\r\n  profile: null,\r\n  status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 6,\r\n        message: action.newPostText,\r\n        like: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        newPostText: '',\r\n        posts: [...state.posts, newPost]\r\n      }\r\n    }\r\n    case DELETE_POST:\r\n      return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n    case SET_USER_PROFILE:\r\n      return {...state, profile: action.profile}\r\n    case SET_USER_STATUS:\r\n      return {...state, status: action.status}\r\n    case SAVE_PHOTO_SUCCESS:\r\n      return {...state, profile: {...state.profile, photos: action.photos}}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => {\r\n  return (dispatch) => {\r\n    userAPI.getUserProfile(userId).then(data => {\r\n      dispatch(setUserProfile(data));\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getUserStatus(userId);\r\n\r\n  dispatch(setUserStatus(response.data));\r\n}\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateUserStatus(status);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    return dispatch(setUserStatus(status));\r\n  }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n  let response = await profileAPI.savePhoto(file);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(savePhotoSuccess(response.data.data.photos));\r\n  }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId;\r\n  const response = await profileAPI.saveProfile(profile);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(userId));\r\n  } else {\r\n    dispatch(stopSubmit('editProdile', {_error: response.data.messages[0]}));\r\n    return Promise.reject(response.data.messages[0]);\r\n  }\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    {id: 1, name: 'Alex'},\r\n    {id: 2, name: 'Petr'},\r\n    {id: 3, name: 'Igor'},\r\n    {id: 4, name: 'Lera'},\r\n    {id: 5, name: 'Nina'}\r\n  ],\r\n  messages: [\r\n    {id: 1, message: 'Hi'},\r\n    {id: 2, message: 'How are you?'},\r\n    {id: 3, message: 'Yo'},\r\n  ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let text = action.newMessageText;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: 4, message: text}]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText})\r\n\r\nexport default dialogsReducer;","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {userAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: true}\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: false}\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n    case SET_USERS:\r\n      return {...state, users: [...action.users]}\r\n    case SET_CURRENT_PAGE:\r\n      return {...state, currentPage: action.currentPage}\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {...state, totalUsersCount: action.count}\r\n    case TOGGLE_IS_FETCHING:\r\n      return {...state, isFetching: action.isFetching}\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId\r\n})\r\n\r\nexport const getUsers = (currentPage, pageSize) => async dispatch => {\r\n  dispatch(toggleIsFetching(true));\r\n\r\n  let response = await userAPI.getUsers(currentPage, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(response.items));\r\n  dispatch(setTotalUsersCount(response.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let response = await apiMethod(userId);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async dispatch => {\r\n  followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async dispatch => {\r\n  followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), unfollowSuccess);\r\n}\r\n\r\nexport default usersReducer;","import {authAPI, securityAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n    case GET_CAPTCHA_URL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n  type: GET_CAPTCHA_URL_SUCCESS,\r\n  payload: {captchaUrl}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n\r\n  if (response.resultCode === 0) {\r\n    let {id, login, email} = response.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async dispatch => {\r\n  let response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    if (response.data.resultCode === 1) {\r\n      dispatch(getCaptchaUrl());\r\n    }\r\n\r\n    let message = response.data.messages.length > 0 ? response.data.messages['0'] : 'Some error';\r\n    dispatch(stopSubmit('login', {_error: message}));\r\n  }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n  let response = await authAPI.logout();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async dispatch => {\r\n  const response = await securityAPI.getCaptchaUrl();\r\n  const captchaUrl = response.data.url;\r\n\r\n  dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise])\r\n    .then(() => {\r\n      dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport appReducer from \"./appReducer\";\r\nimport authReducer from './authReducer';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  app: appReducer,\r\n  auth: authReducer,\r\n  form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n  applyMiddleware(ThunkMiddleware)\r\n))\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport styles from './Sidebar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <nav className={styles.sidebar}>\r\n      <ul>\r\n        <li><NavLink to=\"/profile\" activeClassName={styles.activeLink}>Profile</NavLink></li>\r\n        <li><NavLink to=\"/dialogs\" activeClassName={styles.activeLink}>Messages</NavLink></li>\r\n        <li><NavLink to='/users' activeClassName={styles.activeLink}>Users</NavLink></li>\r\n        {/*<li><NavLink to='/users' activeClassName={styles.activeLink}>News</NavLink></li>*/}\r\n        {/*<li><NavLink to='/users' activeClassName={styles.activeLink}>Music</NavLink></li>*/}\r\n        {/*<li><NavLink to='/users' activeClassName={styles.activeLink}>Setting</NavLink></li>*/}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport styles from './DialogItem.modules.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={styles.dialogItem}>\r\n      <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const FormControl = ({input, meta, ...props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      {hasError && <div className={styles.textError}>{meta.error}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, ...restProps} = props;\r\n\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, ...restProps} = props;\r\n\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","export const required = value => {\r\n  if (value) return undefined;\r\n\r\n  return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n  return undefined;\r\n}","import React from 'react';\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea}\r\n             name='newMessageText'\r\n             rows='3'\r\n             placeholder='Enter your message'\r\n             validate={[required, maxLength50]}\r\n      />\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>);\r\n  let messagesElements = state.messages.map(message => <Message key={message.id} message={message.message}\r\n                                                                id={message.id}/>);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessageCreator(values.newMessageText);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogItems}>\r\n        {dialogsElements}\r\n      </div>\r\n\r\n      <div className={styles.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  let connectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return connectAuthRedirectComponent;\r\n}","import {connect} from 'react-redux';\r\nimport {sendMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from './Dialogs';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessageCreator: (newMessageText) => {\r\n      dispatch(sendMessageCreator(newMessageText))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)","export default __webpack_public_path__ + \"static/media/default_avatar.6c764ebb.png\";","import React, {useState} from 'react';\r\nimport styles from './Pagination.module.css';\r\n\r\nconst Pagination = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.pagination}>\r\n      {portionNumber > 1 &&\r\n      <button onClick={() => {\r\n        setPortionNumber(portionNumber - 1)\r\n      }}>PREV</button>}\r\n\r\n      {pages\r\n        .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n        .map(page => {\r\n          return <span className={currentPage === page && styles.selectedPage} key={page} onClick={(e) => {\r\n            onPageChanged(page);\r\n          }}>{page}</span>\r\n        })}\r\n\r\n      {portionCount > portionNumber &&\r\n      <button onClick={() => {\r\n        setPortionNumber(portionNumber + 1)\r\n      }}>NEXT</button>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userPhoto from '../../assets/images/default_avatar.png';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Pagination from '../common/Pagination/Pagination';\r\n\r\nlet Users = (props) => {\r\n  return <div>\r\n    <Pagination totalItemsCount={props.totalUsersCount}\r\n                pageSize={props.pageSize}\r\n                currentPage={props.currentPage}\r\n                onPageChanged={props.onPageChanged}\r\n    />\r\n    {\r\n      props.users.map(user => <div key={user.id} className={styles.userItem}>\r\n        <div>\r\n          <div className={styles.userPhotoWrapper}>\r\n            <NavLink to={'/profile/' + user.id}>\r\n              <img className={styles.userPhoto}\r\n                   src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                   alt={user.name}/>\r\n            </NavLink>\r\n          </div>\r\n          {user.followed\r\n            ? <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n              props.unfollow(user.id);\r\n            }}>Unfollow</button>\r\n            : <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n              props.follow(user.id);\r\n            }}>Follow</button>\r\n          }\r\n        </div>\r\n        <div className={styles.userItemInfo}>\r\n          <div>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n          </div>\r\n          <div>\r\n            <div>{'user.location.country'}</div>\r\n            <div>{'user.location.cityName'}</div>\r\n          </div>\r\n        </div>\r\n      </div>)\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.70b176f0.gif\";","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\nimport preloader from '../../../assets/images/preloader.gif';\r\n\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div className={styles.preloaderWrapper}>\r\n      <img src={preloader} alt=\"Loading\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  follow,\r\n  getUsers,\r\n  setCurrentPage,\r\n  toggleFollowingProgress,\r\n  unfollow\r\n} from '../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass UsersComponent extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.setCurrentPage(pageNumber);\r\n    this.props.getUsers(pageNumber, this.props.pageSize);\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      {this.props.isFetching ? <Preloader/> : null}\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n             pageSize={this.props.pageSize}\r\n             currentPage={this.props.currentPage}\r\n             onPageChanged={this.onPageChanged}\r\n             users={this.props.users}\r\n             follow={this.props.follow}\r\n             unfollow={this.props.unfollow}\r\n             followingInProgress={this.props.followingInProgress}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching,\r\n    followingInProgress: state.usersPage.followingInProgress\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers\r\n})(UsersComponent);","import React from 'react';\r\nimport styles from './Post.module.css';\r\nimport myPhoto from '../../../../assets/images/default_avatar.png';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.post}>\r\n      <img\r\n        src={myPhoto}\r\n        alt=\"\"/>\r\n      <span>{props.message}</span>\r\n      <div>Like {props.like}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport styles from \"../Posts.module.css\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea}\r\n             name={'newPostText'}\r\n             row='2'\r\n             value={props.newPostText}\r\n             validate={[required, maxLength10]}\r\n      />\r\n      <button className={styles.btn}>Add post</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: 'addNewPost'})(AddNewPostForm);","import React from 'react';\r\nimport styles from './Posts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport AddNewPostForm from \"./AddNewPostForm/AddNewPostForm\";\r\n\r\nconst Posts = React.memo(\r\n  (props) => {\r\n\r\n    let postsElements = props.posts.map(post => <Post key={post.id} id={post.id} message={post.message}\r\n                                                      like={post.like}/>);\r\n\r\n    let onAddPost = (values) => {\r\n      props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>My posts</h3>\r\n\r\n        <div className={styles.postTextarea}>\r\n          <div>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n          </div>\r\n        </div>\r\n\r\n        {postsElements}\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default Posts;","import {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nlet PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateUserStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode\r\n        ? <div>\r\n          <b>Status</b>: <span onDoubleClick={activateEditMode}>{props.status || 'Write the status'}</span>\r\n        </div>\r\n        : <div>\r\n          <b>Status</b>: <input type=\"text\"\r\n                 autoFocus={true}\r\n                 onBlur={deactivateEditMode}\r\n                 onChange={onStatusChange}\r\n                 value={status}/>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from 'react';\r\nimport styles from './ProfileData.module.css';\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <div><b className={styles.contactItem}>{contactTitle}</b>: <a href={contactValue} target='_blank' rel=\"noreferrer\">{contactValue}</a></div>\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport Contact from './Contact';\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        {isOwner && <button onClick={goToEditMode}>Edit</button>}\r\n      </div>\r\n      <div>\r\n        <b>Full name</b>: {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Job description</b>: {profile.lookingForAJobDescription}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        if (profile.contacts[key]) {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        }\r\n      })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileData;","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Input, Textarea} from '../../../common/FormsControls/FormsControls';\r\nimport {required} from \"../../../../utils/validators/validators\";\r\nimport styles from './ProfileData.module.css';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.profileDataForm}>\r\n      <div className={styles.formGroup}>\r\n        <b>Full name</b>:\r\n        <Field component={Input}\r\n               name='fullName'\r\n               validate={[required]}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <b>Job description</b>:\r\n        <Field component={Input}\r\n               name='lookingForAJobDescription'\r\n               validate={[required]}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <b>About me</b>:\r\n        <Field component={Textarea}\r\n               name='aboutMe'\r\n               validate={[required]}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return (\r\n          <div key={key} className={styles.formGroup}>\r\n            <b>{key}</b>:\r\n            <Field component={Input}\r\n                   name={'contacts.' + key}\r\n            />\r\n          </div>\r\n        )\r\n      })}\r\n      </div>\r\n\r\n      {error && <div className={styles.hasError}>\r\n        {error}\r\n      </div>}\r\n\r\n      <button>Save</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: 'editProdile'})(ProfileDataForm);","import React, {useState} from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport defaultAvatar from '../../../assets/images/default_avatar.png';\r\nimport ProfileStatusWithHook from './ProfileStatusWithHook';\r\nimport ProfileData from './ProfileData/ProfileData';\r\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData)\r\n      .then(() => {\r\n        setEditMode(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/*<div className={styles.profileTopBg}>*/}\r\n      {/*  <img src={profileTopBg} alt=''/>*/}\r\n      {/*</div>*/}\r\n      <div className={styles.profileAvatar}>\r\n        <img src={profile.photos.large ? profile.photos.large : defaultAvatar} alt=\"\"/>\r\n        {isOwner && <div><input type={'file'} onChange={onMainPhotoSelected}/></div>}\r\n\r\n        {editMode\r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n          : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {\r\n            setEditMode(true)\r\n          }}/>\r\n        }\r\n\r\n        <ProfileStatusWithHook status={status} updateUserStatus={updateUserStatus}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <main className={styles.profile}>\r\n      <ProfileInfo isOwner={props.isOwner}\r\n                   savePhoto={props.savePhoto}\r\n                   saveProfile={props.saveProfile}\r\n                   profile={props.profile}\r\n                   status={props.status}\r\n                   updateUserStatus={props.updateUserStatus}\r\n      />\r\n      <PostsContainer/>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from '../../redux/profileReducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props}\r\n               isOwner={!this.props.match.params.userId}\r\n               profile={this.props.profile}\r\n               status={this.props.status}\r\n               updateUserStatus={this.props.updateUserStatus}\r\n               savePhoto={this.props.savePhoto}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile})\r\n)(ProfileContainer);","import React from \"react\";\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.headerLogo}>\r\n        <img src=\"https://sun9-58.userapi.com/c637526/v637526465/46948/MYX-VzYtTnU.jpg?ava=1\" alt=\"logo\"/>\r\n      </div>\r\n      <div className={styles.headerAuth}>\r\n        {props.isAuth\r\n          ? <div>{props.login} <button onClick={props.logout}>Log out</button></div>\r\n          : <NavLink to={'/login'}>Login</NavLink>\r\n        }\r\n\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Header {...this.props}/>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {required} from '../../../utils/validators/validators';\r\nimport {Input} from '../../common/FormsControls/FormsControls';\r\nimport styles from './../../common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className={styles.formGroup}>\r\n        <Field component={Input}\r\n               name='email'\r\n               placeholder='Email'\r\n               validate={[required]}\r\n        />\r\n      </div>\r\n      <div className={styles.formGroup}>\r\n        <Field component={Input}\r\n               type='password'\r\n               name='password'\r\n               placeholder='Password'\r\n               validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field component={Input}\r\n               type={'checkbox'}\r\n               name='rememberMe'\r\n        /> remember me\r\n      </div>\r\n\r\n      {captchaUrl && <img src={captchaUrl} alt=''/>}\r\n      {captchaUrl &&\r\n      <div className={styles.formGroup}>\r\n        <Field component={Input}\r\n               name='captcha'\r\n               placeholder='Symbols from image'\r\n               validate={[required]}\r\n        />\r\n      </div>}\r\n\r\n      {\r\n        error && <div className={styles.loginError}>\r\n          {error}\r\n        </div>\r\n      }\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: 'login'})(LoginForm);\r\n\r\n","import React from 'react';\r\nimport LoginForm from \"./LoginForm/LoginForm\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>LOGIN</h1>\r\n      <LoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport './App.css';\r\nimport {Route, withRouter, Switch, Redirect} from 'react-router-dom';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.initialized) {\r\n      return <Preloader/>\r\n    }\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer/>\r\n        <Sidebar/>\r\n        <div className='app-content'>\r\n          <Switch>\r\n            <Redirect exact from='/' to='/profile'/>\r\n            <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n            <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n            <Route path='/users' render={() => <UsersContainer/>}/>\r\n            <Route path='/login' render={() => <Login/>}/>\r\n            <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {initializeApp})\r\n)(App);\r\n","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/reduxStore\";\r\nimport './index.css';\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport App from \"./App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ProfileData_contactItem__tGSWT\",\"profileDataForm\":\"ProfileData_profileDataForm__3aWh1\",\"formGroup\":\"ProfileData_formGroup__2N8lg\",\"hasError\":\"ProfileData_hasError__38byX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__14grV\",\"activeLink\":\"Sidebar_activeLink__1eUV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhotoWrapper\":\"Users_userPhotoWrapper__PaKV7\",\"userPhoto\":\"Users_userPhoto__2R5lm\",\"userItem\":\"Users_userItem__2Wgve\",\"userItemInfo\":\"Users_userItemInfo__3cMMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Posts_profile__3NpXC\",\"postTextarea\":\"Posts_postTextarea__3L_pb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3A4Ud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ga9x\",\"headerLogo\":\"Header_headerLogo__3o7L2\",\"headerAuth\":\"Header_headerAuth__VHTsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__3yhvl\",\"selectedPage\":\"Pagination_selectedPage__3o_Ew\"};"],"sourceRoot":""}